//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LookAtEntityOrderComponent lookAtEntityOrder { get { return (LookAtEntityOrderComponent)GetComponent(GameComponentsLookup.LookAtEntityOrder); } }
    public bool hasLookAtEntityOrder { get { return HasComponent(GameComponentsLookup.LookAtEntityOrder); } }

    public void AddLookAtEntityOrder(long newTargetID) {
        var index = GameComponentsLookup.LookAtEntityOrder;
        var component = (LookAtEntityOrderComponent)CreateComponent(index, typeof(LookAtEntityOrderComponent));
        component.targetID = newTargetID;
        AddComponent(index, component);
    }

    public void ReplaceLookAtEntityOrder(long newTargetID) {
        var index = GameComponentsLookup.LookAtEntityOrder;
        var component = (LookAtEntityOrderComponent)CreateComponent(index, typeof(LookAtEntityOrderComponent));
        component.targetID = newTargetID;
        ReplaceComponent(index, component);
    }

    public void RemoveLookAtEntityOrder() {
        RemoveComponent(GameComponentsLookup.LookAtEntityOrder);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLookAtEntityOrder;

    public static Entitas.IMatcher<GameEntity> LookAtEntityOrder {
        get {
            if (_matcherLookAtEntityOrder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LookAtEntityOrder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLookAtEntityOrder = matcher;
            }

            return _matcherLookAtEntityOrder;
        }
    }
}
