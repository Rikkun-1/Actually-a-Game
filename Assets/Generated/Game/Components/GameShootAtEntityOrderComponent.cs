//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ShootAtEntityOrderComponent shootAtEntityOrder { get { return (ShootAtEntityOrderComponent)GetComponent(GameComponentsLookup.ShootAtEntityOrder); } }
    public bool hasShootAtEntityOrder { get { return HasComponent(GameComponentsLookup.ShootAtEntityOrder); } }

    public void AddShootAtEntityOrder(long newTargetID) {
        var index = GameComponentsLookup.ShootAtEntityOrder;
        var component = (ShootAtEntityOrderComponent)CreateComponent(index, typeof(ShootAtEntityOrderComponent));
        component.targetID = newTargetID;
        AddComponent(index, component);
    }

    public void ReplaceShootAtEntityOrder(long newTargetID) {
        var index = GameComponentsLookup.ShootAtEntityOrder;
        var component = (ShootAtEntityOrderComponent)CreateComponent(index, typeof(ShootAtEntityOrderComponent));
        component.targetID = newTargetID;
        ReplaceComponent(index, component);
    }

    public void RemoveShootAtEntityOrder() {
        RemoveComponent(GameComponentsLookup.ShootAtEntityOrder);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShootAtEntityOrder;

    public static Entitas.IMatcher<GameEntity> ShootAtEntityOrder {
        get {
            if (_matcherShootAtEntityOrder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ShootAtEntityOrder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShootAtEntityOrder = matcher;
            }

            return _matcherShootAtEntityOrder;
        }
    }
}
