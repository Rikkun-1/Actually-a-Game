//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity mapSizeEntity { get { return GetGroup(GameMatcher.MapSize).GetSingleEntity(); } }
    public MapSizeComponent mapSize { get { return mapSizeEntity.mapSize; } }
    public bool hasMapSize { get { return mapSizeEntity != null; } }

    public GameEntity SetMapSize(UnityEngine.Vector2Int newValue) {
        if (hasMapSize) {
            throw new Entitas.EntitasException("Could not set MapSize!\n" + this + " already has an entity with MapSizeComponent!",
                "You should check if the context already has a mapSizeEntity before setting it or use context.ReplaceMapSize().");
        }
        var entity = CreateEntity();
        entity.AddMapSize(newValue);
        return entity;
    }

    public void ReplaceMapSize(UnityEngine.Vector2Int newValue) {
        var entity = mapSizeEntity;
        if (entity == null) {
            entity = SetMapSize(newValue);
        } else {
            entity.ReplaceMapSize(newValue);
        }
    }

    public void RemoveMapSize() {
        mapSizeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MapSizeComponent mapSize { get { return (MapSizeComponent)GetComponent(GameComponentsLookup.MapSize); } }
    public bool hasMapSize { get { return HasComponent(GameComponentsLookup.MapSize); } }

    public void AddMapSize(UnityEngine.Vector2Int newValue) {
        var index = GameComponentsLookup.MapSize;
        var component = (MapSizeComponent)CreateComponent(index, typeof(MapSizeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMapSize(UnityEngine.Vector2Int newValue) {
        var index = GameComponentsLookup.MapSize;
        var component = (MapSizeComponent)CreateComponent(index, typeof(MapSizeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMapSize() {
        RemoveComponent(GameComponentsLookup.MapSize);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMapSize;

    public static Entitas.IMatcher<GameEntity> MapSize {
        get {
            if (_matcherMapSize == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MapSize);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMapSize = matcher;
            }

            return _matcherMapSize;
        }
    }
}
