//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameTickEntity { get { return GetGroup(GameMatcher.GameTick).GetSingleEntity(); } }
    public GameTickComponent gameTick { get { return gameTickEntity.gameTick; } }
    public bool hasGameTick { get { return gameTickEntity != null; } }

    public GameEntity SetGameTick(float newDeltaTime, int newTickFromStart, float newTimeFromStart) {
        if (hasGameTick) {
            throw new Entitas.EntitasException("Could not set GameTick!\n" + this + " already has an entity with GameTickComponent!",
                "You should check if the context already has a gameTickEntity before setting it or use context.ReplaceGameTick().");
        }
        var entity = CreateEntity();
        entity.AddGameTick(newDeltaTime, newTickFromStart, newTimeFromStart);
        return entity;
    }

    public void ReplaceGameTick(float newDeltaTime, int newTickFromStart, float newTimeFromStart) {
        var entity = gameTickEntity;
        if (entity == null) {
            entity = SetGameTick(newDeltaTime, newTickFromStart, newTimeFromStart);
        } else {
            entity.ReplaceGameTick(newDeltaTime, newTickFromStart, newTimeFromStart);
        }
    }

    public void RemoveGameTick() {
        gameTickEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameTickComponent gameTick { get { return (GameTickComponent)GetComponent(GameComponentsLookup.GameTick); } }
    public bool hasGameTick { get { return HasComponent(GameComponentsLookup.GameTick); } }

    public void AddGameTick(float newDeltaTime, int newTickFromStart, float newTimeFromStart) {
        var index = GameComponentsLookup.GameTick;
        var component = (GameTickComponent)CreateComponent(index, typeof(GameTickComponent));
        component.deltaTime = newDeltaTime;
        component.tickFromStart = newTickFromStart;
        component.timeFromStart = newTimeFromStart;
        AddComponent(index, component);
    }

    public void ReplaceGameTick(float newDeltaTime, int newTickFromStart, float newTimeFromStart) {
        var index = GameComponentsLookup.GameTick;
        var component = (GameTickComponent)CreateComponent(index, typeof(GameTickComponent));
        component.deltaTime = newDeltaTime;
        component.tickFromStart = newTickFromStart;
        component.timeFromStart = newTimeFromStart;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTick() {
        RemoveComponent(GameComponentsLookup.GameTick);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameTick;

    public static Entitas.IMatcher<GameEntity> GameTick {
        get {
            if (_matcherGameTick == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameTick);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameTick = matcher;
            }

            return _matcherGameTick;
        }
    }
}
