//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LookAtDirectionOrderComponent lookAtDirectionOrder { get { return (LookAtDirectionOrderComponent)GetComponent(GameComponentsLookup.LookAtDirectionOrder); } }
    public bool hasLookAtDirectionOrder { get { return HasComponent(GameComponentsLookup.LookAtDirectionOrder); } }

    public void AddLookAtDirectionOrder(int newAngle) {
        var index = GameComponentsLookup.LookAtDirectionOrder;
        var component = (LookAtDirectionOrderComponent)CreateComponent(index, typeof(LookAtDirectionOrderComponent));
        component.angle = newAngle;
        AddComponent(index, component);
    }

    public void ReplaceLookAtDirectionOrder(int newAngle) {
        var index = GameComponentsLookup.LookAtDirectionOrder;
        var component = (LookAtDirectionOrderComponent)CreateComponent(index, typeof(LookAtDirectionOrderComponent));
        component.angle = newAngle;
        ReplaceComponent(index, component);
    }

    public void RemoveLookAtDirectionOrder() {
        RemoveComponent(GameComponentsLookup.LookAtDirectionOrder);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLookAtDirectionOrder;

    public static Entitas.IMatcher<GameEntity> LookAtDirectionOrder {
        get {
            if (_matcherLookAtDirectionOrder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LookAtDirectionOrder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLookAtDirectionOrder = matcher;
            }

            return _matcherLookAtDirectionOrder;
        }
    }
}
