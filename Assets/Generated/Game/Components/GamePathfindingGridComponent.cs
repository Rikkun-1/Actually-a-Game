//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity pathfindingGridEntity { get { return GetGroup(GameMatcher.PathfindingGrid).GetSingleEntity(); } }
    public PathfindingGridComponent pathfindingGrid { get { return pathfindingGridEntity.pathfindingGrid; } }
    public bool hasPathfindingGrid { get { return pathfindingGridEntity != null; } }

    public GameEntity SetPathfindingGrid(Roy_T.AStar.Grids.Grid newValue) {
        if (hasPathfindingGrid) {
            throw new Entitas.EntitasException("Could not set PathfindingGrid!\n" + this + " already has an entity with PathfindingGridComponent!",
                "You should check if the context already has a pathfindingGridEntity before setting it or use context.ReplacePathfindingGrid().");
        }
        var entity = CreateEntity();
        entity.AddPathfindingGrid(newValue);
        return entity;
    }

    public void ReplacePathfindingGrid(Roy_T.AStar.Grids.Grid newValue) {
        var entity = pathfindingGridEntity;
        if (entity == null) {
            entity = SetPathfindingGrid(newValue);
        } else {
            entity.ReplacePathfindingGrid(newValue);
        }
    }

    public void RemovePathfindingGrid() {
        pathfindingGridEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PathfindingGridComponent pathfindingGrid { get { return (PathfindingGridComponent)GetComponent(GameComponentsLookup.PathfindingGrid); } }
    public bool hasPathfindingGrid { get { return HasComponent(GameComponentsLookup.PathfindingGrid); } }

    public void AddPathfindingGrid(Roy_T.AStar.Grids.Grid newValue) {
        var index = GameComponentsLookup.PathfindingGrid;
        var component = (PathfindingGridComponent)CreateComponent(index, typeof(PathfindingGridComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePathfindingGrid(Roy_T.AStar.Grids.Grid newValue) {
        var index = GameComponentsLookup.PathfindingGrid;
        var component = (PathfindingGridComponent)CreateComponent(index, typeof(PathfindingGridComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePathfindingGrid() {
        RemoveComponent(GameComponentsLookup.PathfindingGrid);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPathfindingGrid;

    public static Entitas.IMatcher<GameEntity> PathfindingGrid {
        get {
            if (_matcherPathfindingGrid == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PathfindingGrid);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPathfindingGrid = matcher;
            }

            return _matcherPathfindingGrid;
        }
    }
}
