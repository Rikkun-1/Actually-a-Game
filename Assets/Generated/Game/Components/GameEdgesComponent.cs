//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity edgesEntity { get { return GetGroup(GameMatcher.Edges).GetSingleEntity(); } }
    public EdgesComponent edges { get { return edgesEntity.edges; } }
    public bool hasEdges { get { return edgesEntity != null; } }

    public GameEntity SetEdges(System.Collections.Generic.IReadOnlyList<Roy_T.AStar.Graphs.IEdge> newValue) {
        if (hasEdges) {
            throw new Entitas.EntitasException("Could not set Edges!\n" + this + " already has an entity with EdgesComponent!",
                "You should check if the context already has a edgesEntity before setting it or use context.ReplaceEdges().");
        }
        var entity = CreateEntity();
        entity.AddEdges(newValue);
        return entity;
    }

    public void ReplaceEdges(System.Collections.Generic.IReadOnlyList<Roy_T.AStar.Graphs.IEdge> newValue) {
        var entity = edgesEntity;
        if (entity == null) {
            entity = SetEdges(newValue);
        } else {
            entity.ReplaceEdges(newValue);
        }
    }

    public void RemoveEdges() {
        edgesEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EdgesComponent edges { get { return (EdgesComponent)GetComponent(GameComponentsLookup.Edges); } }
    public bool hasEdges { get { return HasComponent(GameComponentsLookup.Edges); } }

    public void AddEdges(System.Collections.Generic.IReadOnlyList<Roy_T.AStar.Graphs.IEdge> newValue) {
        var index = GameComponentsLookup.Edges;
        var component = (EdgesComponent)CreateComponent(index, typeof(EdgesComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEdges(System.Collections.Generic.IReadOnlyList<Roy_T.AStar.Graphs.IEdge> newValue) {
        var index = GameComponentsLookup.Edges;
        var component = (EdgesComponent)CreateComponent(index, typeof(EdgesComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEdges() {
        RemoveComponent(GameComponentsLookup.Edges);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEdges;

    public static Entitas.IMatcher<GameEntity> Edges {
        get {
            if (_matcherEdges == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Edges);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEdges = matcher;
            }

            return _matcherEdges;
        }
    }
}
