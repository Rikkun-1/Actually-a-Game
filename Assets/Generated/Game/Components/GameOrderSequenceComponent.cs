//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public OrderSequence orderSequence { get { return (OrderSequence)GetComponent(GameComponentsLookup.OrderSequence); } }
    public bool hasOrderSequence { get { return HasComponent(GameComponentsLookup.OrderSequence); } }

    public void AddOrderSequence(System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> newOrders) {
        var index = GameComponentsLookup.OrderSequence;
        var component = (OrderSequence)CreateComponent(index, typeof(OrderSequence));
        component.orders = newOrders;
        AddComponent(index, component);
    }

    public void ReplaceOrderSequence(System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> newOrders) {
        var index = GameComponentsLookup.OrderSequence;
        var component = (OrderSequence)CreateComponent(index, typeof(OrderSequence));
        component.orders = newOrders;
        ReplaceComponent(index, component);
    }

    public void RemoveOrderSequence() {
        RemoveComponent(GameComponentsLookup.OrderSequence);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOrderSequence;

    public static Entitas.IMatcher<GameEntity> OrderSequence {
        get {
            if (_matcherOrderSequence == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.OrderSequence);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOrderSequence = matcher;
            }

            return _matcherOrderSequence;
        }
    }
}
